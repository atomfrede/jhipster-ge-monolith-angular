dependencies {
    developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    implementation "com.h2database:h2"
}

def profiles = "dev"
if (project.hasProperty("no-liquibase")) {
    profiles += ",no-liquibase"
}
if (project.hasProperty("tls")) {
    profiles += ",tls"
}


springBoot {
    buildInfo {
        properties {
            time = null
        }
    }
}

bootRun {
    args = []
}

task webapp(type: NpmTask) {

    inputs.property('appVersion', project.version)
    inputs.files("package-lock.json")
        .withPropertyName('package-lock')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files("build.gradle")
        .withPropertyName('build.gradle')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files("angular.json")
        .withPropertyName('angular.json')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("webpack/")
        .withPropertyName('webpack')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files(fileTree('src/main/webapp/'))
        .withPropertyName('webapp-sources')
        .withPathSensitivity(PathSensitivity.RELATIVE)

    outputs.dir("build/resources/main/static/")
        .withPropertyName('webapp-build-dir')
//        .withPathSensitivity(PathSensitivity.RELATIVE)

    dependsOn npmInstall
    args = ["run", "webapp:build"]
    environment = [APP_VERSION: project.version]
}

processResources {
    inputs.property('version', version)
    inputs.property('springProfiles', profiles)
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
        filter {
            it.replace("#spring.profiles.active#", profiles)
        }
    }
}

processResources.dependsOn webapp
bootJar.dependsOn processResources
